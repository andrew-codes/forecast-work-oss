name: Build and package apps
on:
  workflow_call:
    inputs:
      publish_flag:
        required: false
        type: string
        default: "--publish never"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - uses: actions/cache@v2
        with:
          path: "node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies
        run: yarn
      - name: Build
        run: yarn build
      - name: Upload built code
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  package_windows:
    name: Package application (Windows)
    runs-on: windows-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - uses: actions/cache@v2
        with:
          path: "node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies
        run: yarn
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: .
      - name: Package and publish application
        run: yarn release/windows ${{ inputs.publish_flag }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Upload Windows app
        uses: actions/upload-artifact@v2
        with:
          name: forecasting_windows
          path: dist/*.exe

  # package_linux:
  #   name: Package application (Linux)
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Use Node.js 16.x
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 16.x
  #     - uses: actions/cache@v2
  #       with:
  #         path: "node_modules"
  #         key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
  #     - name: Install dependencies
  #       run: yarn
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         path: .
  #     - name: Package and publish application
  #       run: yarn release/linux ${{ inputs.publish_flag }}
  #       env:
  #         GITHUB_TOKEN: ${{ github.token }}
  #     - name: Upload Linux app
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: forecasting_linux
  #         path: dist/*.deb
  #     - name: Upload Linux app
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: forecasting_linux
  #         path: dist/*.apk

  package_osx:
    name: Package application (OSX)
    runs-on: macos-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - uses: actions/cache@v2
        with:
          path: "node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies
        run: yarn
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: .
      - name: Package and publish application
        run: yarn release/osx ${{ inputs.publish_flag }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Upload OSX app
        uses: actions/upload-artifact@v2
        with:
          name: forecasting_osx
          path: dist/*.dmg